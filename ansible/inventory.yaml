all:
  hosts:
    example.adminguide.com:

  vars:
    ansible_user: ansible

    # The following two secrets are NOT site or vm specific! Every operator in Secure Shell Networks has his own cloudflare keys!
    # - The cloudflare ca key, can be used to obtain cloudflare origin server certificates for nginx vhosts reachable from external
    # - The cloudflare dns token can be used to set dns entries to any authorized dns zone.
    # These secrets are used in the nginx workflow to setup external vhosts.
    operator_cf_ca_key: ""
    operator_cf_dns_token: ""

    users: []

    ##################################################
    #    Default Values for ansible role switches    #
    ##################################################
    
    ### ansible-role-docker ###
    docker: false
    # will be evaluated on playbook run, so might be true, when docker is enabled in the host_vars
    adjust_docker_deamon: "{{ docker }}"

    ### ansible-role-adminguide-nginx ###
    nginx: false
    vhosts:

    ### ansible-role-felbinger_nginx ###
    nginx_cert_email: "acme@admin-guide.com"
    # acme.sh configuration parameters for acme-dns-01 challenge
    nginx_cf_token:  # see vault: group_vars/all
      admin-guide.com: ""
    nginx_cf_zone_id:
      admin-guide.com: "54da29e6c00c28fc1adb06f82f7a3fe2"
    nginx_cf_account_id:
      admin-guide.com: "c6150c745385ae6ed778daef69a6ed18"

    ##################################################
    #       Default Settings for ansible roles       #
    ##################################################
    ### ansible-role-docker ###
    # docker compose plugin cannot be installed using `docker_install_compose_plugin: true` for whatever reason.
    #  We are using the post_tasks section in the servers.yaml playbook to install it using apt (after the roles have run).

